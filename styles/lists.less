
.li-state (@class, @color) {
  li.list-item@{class},
  li.list-nested-item@{class} > .list-item {
    color: var(--color);
    .with-selected-variant(@@color);
    .with-hovered-variant(@@color);
  }
}

.li-text-color (@state) {
  @classname: ~".text-@{state}";
  @varname: ~"text-color-@{state}";
  .li-state(@classname, @varname) }

.li-status-color (@state) {
  @classname:      ~".status-@{state}";
  @varname:        ~"text-color-@{state}";
  .li-state(@classname, @varname) }

.li-status-subtle (@state) {
  @classname:      ~".status-@{state}";
  @varname:        ~"text-color-subtle";
  .li-state(@classname, @varname) }



// Regular trees & list groups

.list-group,
.list-tree {

  li .character-match {
    transition: @transition-color }

  li.selected .character-match {
    font-size: @font-size }

  li.selected .word {
    color: @text-color-selected !important }

  li.selected:before {
    background: @background-color-selected;
    background-color: fade(@text-color, 75%);
    z-index: 0 }

  li {
    .text(normal);
    color: var(--color);
    transition: @transition-color }

  li:not(.list-nested-item),
  li.list-nested-item > .list-item {
    color: var(--color);
    .with-selected-variant(@text-color);
    .with-hovered-variant(@text-color);
    .with-active-variant(@text-color);
    .text(normal) }

  .li-text-color(info);
  .li-text-color(success);
  .li-text-color(warning);
  .li-text-color(error);
  .li-text-color(subtle);
  .li-text-color(selected);
  .li-status-color(added);
  .li-status-color(renamed);
  .li-status-color(modified);
  .li-status-color(removed);
  .li-status-subtle(ignored);

  li.list-item.selected,
  li.list-nested-item.selected > .list-item {
    .text(selected);
    font-size: inherit }
}



// Select lists

ul.list-group,
ol.list-group,
.modal.select-list ol.list-group,
.modal .select-list ol.list-group,
.select-list ol.list-group {

  li pre {
    margin-bottom: 0 }

  li.two-lines {
    .primary-line {
      margin-bottom: -0.5em;
      padding-top: 0.5em;
      .text(menu) }
    .secondary-line {
      .text(subtle);
      font-size: 0.85em;
      margin-top: -0.5em;
      padding-bottom: 0.5em;
    }
    &.selected .secondary-line {
      .text(selected);
      font-size: 0.85em;
    }
  }

  li.selected {
    background-color: @background-color-selected;
    &:before {
      display: none }
    pre {
      border-color: @text-color-highlight }
  }

  &.mark-active {
    li:before {
      content: '';
      background-color: transparent;
      position: static;
      display: inline-block;
      left: auto;
      right: auto;
      height: @list-active-icon-size;
      width: @list-active-icon-size }

    li.active {
      .octicon(check, @list-active-icon-size) }

    li::before {
      margin-right: @component-icon-padding }

    li.active:before {
        color: @text-color-success }}

  li .character-match {
    .text(normal);
  }

  li.selected .character-match {
    .text(selected);
  }

  li {
      color: var(--color);
    .with-selected-variant(@text-color);
    .with-hovered-variant(@text-color);
    .with-active-variant(@text-color);
    line-height: @list-item-height !important;
    padding: @component-padding / 4 @component-padding / 2 !important;

    &.two-lines {
      padding: @component-padding / 4 @component-padding*2;
    }

    .status.icon {
      float: right;
      margin-left: @component-icon-padding;

      &:before {
        margin-right: 0;
      }
    }

    &.selected {
      border-radius: 0 !important;

      .status.icon {
        color: @text-color-selected;
      }
    }
  }
  li,
  span,
  span.title,
  span[title] {
    font-weight: inherit !important;
    font-family: inherit !important;
    font-size:   inherit !important;

    &.selected {
      font-weight: 600 !important;
      letter-spacing: -0.007em }}
}



// Popover lists

.select-list.popover-list {
  .overlay-shadow();
  --background-color: @overlay-background-color;

  border:         1px solid @overlay-border-color !important;
  background:     var(--background-color);
  border-radius:  @component-border-radius !important;

  atom-text-editor {
    margin-bottom: @component-padding / 6 }

  .list-group li {
    padding-left: @component-padding;
    transition: color @transition-time ease }
}

.ui-sortable li {
  line-height: @list-item-height }

.ui-sortable li.ui-sortable-placeholder {
  visibility: visible !important;
  background: var(--background-color);
  .dimmed(3) }

li.ui-draggable-dragging,
li.ui-sortable-helper {
  line-height: @list-item-height;
  height: @list-item-height;
  list-style: none;
  padding: 0 @component-padding;
  background: @background-color-highlight }
