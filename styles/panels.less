
@panel-heading-text-size: 1.5em;
@handle-size: 7px;


// Panes

atom-panel-container {
  .dimmed(1);
  .no-borders }

atom-pane-container.bottom {
    margin-top: 2px;
    border-top: 1px solid @tool-panel-border-color;
    z-index: 3 }

atom-pane-axis {
  &.horizontal > *:last-child {
      border-right: none }

  &.horizontal > * {
    border-right: 1px solid @base-border-color }

  &.vertical > atom-pane-resize-handle.vertical {
    border-bottom: 1px solid @base-border-color;
    margin-bottom: -1px }
}

// .right atom-pane-container atom-pane.pane:last-of-type:not(:only-of-type) {
//   z-index:     1200;
//   margin-left: -@panel-nudge-radius }
atom-pane .item-views,
.pane-item {
  .no-borders }

.focusable-panel,
.padded[class*='panel'],
.item-views .focusable-panel {
  padding: @component-padding }

.inset-panel .panel-heading,
.panel-heading {
  .text(heading);
  font-size:     @panel-heading-text-size;
  line-height:   @panel-heading-text-size !important;
  border-radius: 0;

  .btn {
    .button(@button-border-color);
    font-size:   @text-size !important;
    padding:     0 8px !important;
    height:      @panel-heading-text-size !important;
    line-height: inherit !important }

  .btn .btn-primary { .button-variant(@text-color-info) }
  .btn .btn-info {    .button-variant(@text-color-info) }
  .btn .btn-success { .button-variant(@text-color-success) }
  .btn .btn-warning { .button-variant(@text-color-warning) }
  .btn .btn-error {   .button-variant(@text-color-error) }
}


// Panels & panes

atom-pane:only-child {
  flex-grow: 1 !important }

atom-dock,
atom-pane,
atom-panel,
.pane-item,
.inset-panel,
.tool-panel,
.panel-body {
  .no-borders;
  background: var(--background-color) !important;
  border-radius: @component-border-radius }

atom-pane,
atom-panel,
atom-dock,
.panel-body {
  .dimmed(1) }

.pane-item,
.inset-panel,
.tool-panel {
  .dimmed(1.5) }

atom-panel {
  --background-color: @tool-panel-background-color;
  .text(normal);

  &.bottom {
    background: @app-background-color }

  &.bottom > *:not(:empty):not(.status-bar) {
    background: @app-background-color;
    padding-top: @component-padding/2;
    z-index: 3 } }


.right atom-pane-container {
  atom-pane.pane .tab-bar {
    height:      2em !important;
    max-height:  2em;
    line-height: 2em }

  atom-pane.pane .tab-bar li.tab,
  atom-pane.pane .tab-bar li.tab .title {
    height: inherit;
    line-height: inherit }

  atom-pane.pane:last-of-type:not(:only-of-type) {
    margin-left: 0 }
}


// Docks

atom-panel-container atom-dock .item-views > *:not([style*="none"]) {
  background: var(--background-color) }

.atom-dock-mask {
  background: var(--background-color);
  overflow:   initial }


// Toggle arrows

.atom-dock-toggle-button {
  display: flex;
  align-items: center;
  justify-content: center;
  &.left,
  &.right {
    width:  @toggle-area-outset;
    height: @toggle-area-size }

  &.bottom,
  &.top {
    height: @toggle-area-outset;
    width:  @toggle-area-size }

  .atom-dock-toggle-button-inner {
    display: block;
    border: none;
    border-radius: 0;
    height: inherit;
    width: inherit;
    background-color: var(--background-color);


    .icon[class*='chevron'] {
      position:  absolute;
      width:     inherit;
      top:       50%;
      left:      50%;
      transform: translate(-50%, -50%);
    }

    &:hover {
      background-color: lighten(@base-background-color, 3%);
    }
  }
}

.atom-dock-resize-handle {
  z-index: 2000;

  // Fix the gutter caused by handles
  &.left { margin-right: -@handle-size / 2 }
  &.right { margin-left: -@handle-size / 2 }
  &.bottom { margin-top: -@handle-size / 2 }}

.atom-dock-toggle-button:not(.atom-dock-toggle-button-visible) .atom-dock-toggle-button-inner {
  z-index: 600;

  &.left  { transform: translate(-100%, 0) }
  &.right { transform: translate(100%, 0) }
  &.bottom { transform: translate(0, 100%) }}
