@color-modified: @text-color-warning;



.tab-bar {
  width:        100%;
  display:      table;
  table-layout: fixed;
  -webkit-transform: scale(1);
  padding:      @tab-bar-margin 0 0 !important;
  background:   var(--background-color) linear-gradient(10deg, transparent 0%, fade(black, 15%) 60%) !important;
  height:       auto;

  .placeholder {
    display: none }
}


.tab-bar .tab {
  .text(menu);
  .status-colors;
  .interactions(darken(@tab-bar-background-color, 4%));
  .eq-tab;

  width:        100%;
  display:      table-cell;
  padding:      0 @component-padding;
  position:     relative;
  transition:   @transition-color;
  text-align:   center;
  border-style: solid;
  border-width: 0 !important;
  border-radius: @component-border-radius / 2 @component-border-radius / 2 0 0;

  // &:not(.active) {
  //   background-color: transparent !important;
  //   border-color:     transparent transparent @tab-border-color !important }

  &.active {
    border-color:     @tab-border-color @tab-border-color transparent !important;
    width:      100% }

  &:hover {
    transition-duration: @transition-time / 4;
  }

  .title {
    justify-content: center;
    align-items:     center;
    overflow:         hidden;
    border-style:     solid;
    border-width:     0 0 1px;
    border-color:     inherit !important;
    margin:           0.75em 0 !important;
    display:          block }

  .icon,
  .icon::before {
    vertical-align: middle !important;
    line-height:    inherit;
    padding:        0;
    margin:         0 }

  .icon::before {
    font-size:    @tab-icon-size;
    margin:       0 @component-padding / 4 0 0;
    width:        1.1em;
    height:       1.1em;
    line-height:  1.1em }

  .bottom & {
    height:       @tab-bottom-height;
    max-height:   @tab-bottom-height;
    line-height:  @tab-bottom-height }
}


.close-icon {
  --color:          @text-color-subtle;
  --color-hover:    @text-color-warning;
  --color-modified: @text-color-info;
  --color-modified-hover: @text-color-warning;
  --color-close-overlay:  @text-color-error;

  .tab-bar .tab &::after {
    transition:     @transition-time background-color ease, @transition-time top ease;
    background:     transparent;
    position:       absolute;
    cursor:         pointer;
    bottom:         0;
    right:          0;
    left:           0;
    top:            @tab-height * 2;
    content:        "";
    border-radius:  1px;
    mix-blend-mode: color-dodge }

  .tab-bar .tab &:hover::after {
    top:        0;
    z-index:    100;
    background: var(--color-close-overlay) }

  .tab-bar .tab &::before {
    justify-content:  center;
    vertical-align:   middle;
    align-items:      center;
    text-align:       center;
    box-sizing:       content-box;
    position:         absolute;
    display:          flex;
    cursor:           pointer;
    padding:          0.5em 0.35em 0.5em 0.6em;
    margin:           0;
    width:            1em;
    height:           1em;
    line-height:      1em;
    border-radius:    50%;
    transition:       @transition-time transform ease, @transition-time color ease, @transition-time background-color ease;
    transform:        scale(1) translate(-50%, -50%);
    color:            inherit !important;
    right:            0.2em;
    top:              50%; }

  &:hover,
  .tab-bar .tab:hover & {
    opacity:             1;
    transition-delay:    0 !important;
    transition-duration: 0 !important }

  // Default
  .tab-bar .tab & {
    display: inline;
    opacity: 0;
    transition: @transition-time opacity ease;
    border:  0px solid rgba(200,200,200,0.1);
    border-color: var(--color);
    color:        var(--color) }


  // Not modified, hover (close)
  .tab-bar .tab &:hover::before {
    border-color: var(--color-hover);
    background:   @base-background-color;
    color:        var(--color-hover) }

  // Modified state (modified marker)
  .tab-bar .tab.modified:not(:hover) & {
    position: absolute !important }

  .tab-bar .tab &,
  .tab-bar .tab.modified & {
    position: static !important }

  .tab-bar .tab.modified:not(:hover) &::before {
    border-width: 2px;
    border-color: var(--color-modified);
    color:        var(--color-modified) }

  // Modified, hover (close)
  .tab-bar .tab.modified &:hover::before {
    border-color: var(--color-modified-hover);
    color: var(--color-modified-hover) }

  // Tab hover (display)
  .tab-bar .tab:hover &::before {
    opacity:    1;
    background: @base-background-color }
}
